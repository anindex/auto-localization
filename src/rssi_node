#!/usr/bin/env python
#TODO: change Device to accept st as float not str
from __future__ import print_function
import sys
import rospy
from std_msgs.msg import String
from rssi.devices import WifiDevice
import thread
from krp_localization.msg import RSSI, RSSIData

class RSSINode():
    def __init__(self, probe_size=3):

        self.pub = rospy.Publisher('rssi',RSSIData,queue_size=10)

        self.probe_size = rospy.get_param('~probe_size', probe_size)
        self.freq = rospy.get_param('~freq', 1)

        #RSSI device init
        self.device = WifiDevice()
        r = rospy.Rate(self.freq)

        rospy.loginfo("RSSI Node started, publishing RSSI at rate {} Hz".format(self.freq))

        while not rospy.is_shutdown():
            mess = RSSIData()
            mess.start_time_ns = rospy.get_rostime().nsecs
            macs = {}

            for _ in range(self.probe_size):
                data = self.device.probe_signal()
                for key, val in data.items():
                    if key not in macs:
                        macs[key] = []
                    macs[key].append(val)


            mess.macs = list(macs.keys())
            mess.rssi = []
            for mac in mess.macs:
                s = RSSI()
                s.rssi = macs[mac]
                mess.rssi.append(s)

            self.pub.publish(mess)
            r.sleep()

if __name__ == '__main__':
    rospy.init_node('rssi_node',anonymous=True)
    try:
        ra = RSSINode()
    except rospy.ROSInterruptException:
        print('Could not initialize rssi node')
